<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.8 on win32)" generated="20231009 15:31:52.767" rpa="false" schemaversion="4">
<suite id="s1" name="Test" source="C:\Users\Dzmitry_Maldavanau\PycharmProjects\RF_project\test.robot">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary" type="SETUP">
<arg>pymssql</arg>
<arg>database='TRN', user='testuser', password='test123', host="EPBYMINW1762", server="SQLEXPRESS", port=1433</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_connect_string`
(parsed as a list of named arguments).</doc>
<msg timestamp="20231009 15:31:52.806" level="INFO">Executing : Connect To Database Using Custom Params : pymssql.connect(db_api_2.connect(database='TRN', user='testuser', password=***, host="EPBYMINW1762", server="SQLEXPRESS", port=1433)) </msg>
<status status="PASS" starttime="20231009 15:31:52.798" endtime="20231009 15:31:52.850"/>
</kw>
<test id="s1-t1" name="Employees: the table should have at least 1 employee with empty manager_id" line="13">
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<arg>select * from hr.employees where manager_id is NULL</arg>
<doc>Check if any row would be returned by given the input `selectStatement`. If there are no results, then this will
throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction
commit or rollback. The default error message can be overridden with the `msg` argument.</doc>
<msg timestamp="20231009 15:31:52.851" level="INFO">Executing : Check If Exists In Database  |  select * from hr.employees where manager_id is NULL</msg>
<msg timestamp="20231009 15:31:52.851" level="INFO">Executing : Query  |  select * from hr.employees where manager_id is NULL </msg>
<status status="PASS" starttime="20231009 15:31:52.851" endtime="20231009 15:31:52.854"/>
</kw>
<doc>|Steps:
|0. Connect to the database TRN
|1. Execute the query: select records from table Employees where manager is NULL
|Expected result: 0 records are displayed, status: pass</doc>
<tag>AUTOTEST-001</tag>
<status status="PASS" starttime="20231009 15:31:52.850" endtime="20231009 15:31:52.854"/>
</test>
<test id="s1-t2" name="Dependents: the table should present in the database" line="23">
<kw name="Table Must Exist" library="DatabaseLibrary">
<arg>dependents</arg>
<doc>Check if the table given exists in the database. Set optional input `sansTran` to True to run command without an
explicit transaction commit or rollback. The default error message can be overridden with the `msg` argument.</doc>
<msg timestamp="20231009 15:31:52.857" level="INFO">Executing : Table Must Exist  |  dependents </msg>
<msg timestamp="20231009 15:31:52.857" level="INFO">Executing : Row Count  |  SELECT * FROM information_schema.tables WHERE table_name='dependents' </msg>
<status status="PASS" starttime="20231009 15:31:52.856" endtime="20231009 15:31:52.873"/>
</kw>
<doc>|Steps:
|0. Connect to the database TRN
|1. Execute the query: select records from system info table where table name is 'dependents'
|Expected result: dependents table is present, status: pass</doc>
<tag>AUTOTEST-002</tag>
<status status="PASS" starttime="20231009 15:31:52.856" endtime="20231009 15:31:52.874"/>
</test>
<test id="s1-t3" name="Regions: 4 records are expected to be in the table" line="33">
<kw name="Row Count Is Equal To X" library="DatabaseLibrary">
<arg>select * from hr.regions</arg>
<arg>4</arg>
<doc>Check if the number of rows returned from `selectStatement` is equal to the value submitted. If not, then this
will throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit
transaction commit or rollback. The default error message can be overridden with the `msg` argument.</doc>
<msg timestamp="20231009 15:31:52.876" level="INFO">Executing : Row Count Is Equal To X  |  select * from hr.regions  |  4</msg>
<msg timestamp="20231009 15:31:52.876" level="INFO">Executing : Row Count  |  select * from hr.regions </msg>
<status status="PASS" starttime="20231009 15:31:52.876" endtime="20231009 15:31:52.878"/>
</kw>
<doc>|Steps:
|0. Connect to the database TRN
|1. Execute the query: select records from table Regions
|Expected result: 4 records are displayed, status: pass</doc>
<tag>AUTOTEST-003</tag>
<status status="PASS" starttime="20231009 15:31:52.875" endtime="20231009 15:31:52.878"/>
</test>
<test id="s1-t4" name="Locations: US postal code should consist of 5 or 9(5-4) digits" line="43">
<kw name="Row Count Is 0" library="DatabaseLibrary">
<arg>select * from hr.locations except (select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]%' union select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]%')</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback. The default error message can be overridden with the `msg` argument.</doc>
<msg timestamp="20231009 15:31:52.881" level="INFO">Executing : Row Count Is 0  |  selectStatement</msg>
<msg timestamp="20231009 15:31:52.881" level="INFO">Executing : Row Count  |  select * from hr.locations except (select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]%' union select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]%') </msg>
<msg timestamp="20231009 15:31:52.886" level="FAIL">Expected 0 rows, but 3 were returned from: 'select * from hr.locations except (select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]%' union select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]%')'</msg>
<status status="FAIL" starttime="20231009 15:31:52.880" endtime="20231009 15:31:52.886"/>
</kw>
<doc>|Steps:
|0. Connect to the database TRN
|1. Execute the query: select records from table Locations where postal code doesn't meet formats: 5 digits or 9 digits(5-4)
|Expected result: 0 records are displayed, status: pass</doc>
<tag>AUTOTEST-004</tag>
<status status="FAIL" starttime="20231009 15:31:52.880" endtime="20231009 15:31:52.887">Expected 0 rows, but 3 were returned from: 'select * from hr.locations except (select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]%' union select * from hr.locations where postal_code like '[0-9][0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]%')'</status>
</test>
<test id="s1-t5" name="Countries: country_id should contain only from 2 letters" line="53">
<kw name="Row Count Is 0" library="DatabaseLibrary">
<arg>select * from hr.countries where country_id not like '[A-Z][A-Z]'</arg>
<doc>Check if any rows are returned from the submitted `selectStatement`. If there are, then this will throw an
AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction commit or
rollback. The default error message can be overridden with the `msg` argument.</doc>
<msg timestamp="20231009 15:31:52.890" level="INFO">Executing : Row Count Is 0  |  selectStatement</msg>
<msg timestamp="20231009 15:31:52.890" level="INFO">Executing : Row Count  |  select * from hr.countries where country_id not like '[A-Z][A-Z]' </msg>
<status status="PASS" starttime="20231009 15:31:52.890" endtime="20231009 15:31:52.892"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>all country_id have the valid format</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231009 15:31:52.892" endtime="20231009 15:31:52.893"/>
</kw>
<doc>|Steps:
|0. Connect to the database TRN
|1. Execute the query: select records from table Countries where country_id doesn't consist of 2 letters
|Expected result: 0 records are displayed, status: pass</doc>
<tag>AUTOTEST-005</tag>
<status status="PASS" starttime="20231009 15:31:52.889" endtime="20231009 15:31:52.893"/>
</test>
<test id="s1-t6" name="Dependents: the only values in relationship column is 'Child'" line="64">
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${output}</var>
<arg>select distinct relationship from hr.dependents where relationship not in ('Child')</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20231009 15:31:52.895" level="INFO">Executing : Execute SQL String  |  select distinct relationship from hr.dependents where relationship not in ('Child') </msg>
<msg timestamp="20231009 15:31:52.897" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231009 15:31:52.895" endtime="20231009 15:31:52.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231009 15:31:52.898" level="INFO">None</msg>
<status status="PASS" starttime="20231009 15:31:52.898" endtime="20231009 15:31:52.898"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20231009 15:31:52.898" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231009 15:31:52.898" endtime="20231009 15:31:52.898"/>
</kw>
<doc>|Steps:
|0. Connect to the database TRN
|1. Execute the query: select distinct values from table Dependents except 'Child'
|Expected result: 0 records are displayed, status: pass</doc>
<tag>AUTOTEST-006</tag>
<status status="PASS" starttime="20231009 15:31:52.895" endtime="20231009 15:31:52.899"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.
By default it's not an error if there was no open database connection -
suitable for usage as a teardown.
However you can enforce it using the `error_if_no_connection` parameter.</doc>
<msg timestamp="20231009 15:31:52.901" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20231009 15:31:52.900" endtime="20231009 15:31:52.901"/>
</kw>
<doc>A test suite (6 test cases) for Data Quality testing of the tables from the database TRN</doc>
<status status="FAIL" starttime="20231009 15:31:52.769" endtime="20231009 15:31:52.901"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">AUTOTEST-001</stat>
<stat pass="1" fail="0" skip="0">AUTOTEST-002</stat>
<stat pass="1" fail="0" skip="0">AUTOTEST-003</stat>
<stat pass="0" fail="1" skip="0">AUTOTEST-004</stat>
<stat pass="1" fail="0" skip="0">AUTOTEST-005</stat>
<stat pass="1" fail="0" skip="0">AUTOTEST-006</stat>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
